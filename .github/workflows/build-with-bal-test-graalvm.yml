name: GraalVM Check

on:
  schedule:
    - cron: "30 18 * * *"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || !contains(github.event.pull_request.labels.*.name, 'Skip GraalVM Check')

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v3

      - name: Set Up Ballerina
        uses: ballerina-platform/setup-ballerina@v1.1.0
        with:
          version: latest

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: "17"
          distribution: "graalvm-community"
          set-java-home: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check GraalVM installation
        run: |
          echo "GRAALVM_HOME: ${{ env.GRAALVM_HOME }}"
          echo "JAVA_HOME: ${{ env.JAVA_HOME }}"
          native-image --version

      - name: Set ENV Variables
        run: |
          echo -e '${{ toJson(secrets) }}' | jq -r 'to_entries[] | .key + "=" + .value' >> $GITHUB_ENV

      - name: Build Package
        run: ./gradlew build -x :sales-examples:build
        env:
          packageUser: ${{ github.actor }}
          packagePAT: ${{ secrets.GITHUB_TOKEN }}

      - name: Remove Target Directory
        run: |
          cd ballerina
          connectors=$(ls -d ./*/ 2>/dev/null) || true
          for dir in "${connectors[@]}"; do
            echo "$dir"
            cd "$dir" &&
              sudo rm -rf target
          done  

      - name: Test with GraalVM
        run: |
          cd ballerina
          connectors=$(ls -d ./*/ 2>/dev/null) || true
          for dir in "${connectors[@]}"; do
            echo "Testing $dir"
            if [[ "$dir" == *resources/ ]]; then
              continue
            fi
            cd "$dir" &&
              bal test --graalvm 
          done  
