// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

import ballerina/http;

# OAuth2 Client Credentials Grant Configs
public type OAuth2ClientCredentialsGrantConfig record {|
    *http:OAuth2ClientCredentialsGrantConfig;
    # Token URL
    string tokenUrl = "https://{subdomain}.authentication.{token-domain}/oauth/token?grant_type=client_credentials";
|};

public type DataSubjectEndofBusinessResponse record {
    # If the data subject has reached the end of residence then the value is true otherwise this value is false
    boolean dataSubjectExpired?;
    # Message stating why the given data subject has not reached the end of business.
    # If the data subject has reached end of business then null string is returned.
    string dataSubjectNotExpiredReason?;
};

public type DataSubjectLegalEntitiesResponse DataSubjectLegalEntitiesResponse_inner[];

# Represents the Headers record for the operation: getLegalentitiesDatasubjectrole
public type GetLegalentitiesDatasubjectroleHeaders record {
    string? Accept\-Language?;
};

public type DataSubjectsDestroying record {
    # The blocked data subjects belonging to this application group have to be destroyed
    string applicationGroupName?;
    # The blocked data subjects associated with this data subject role of the application need to be destroyed
    string dataSubjectRole?;
};

public type DataSubjectLegalGroundDeletion_retentionRules record {
    # the legal entity of the application group with which the transactional data is associated
    string legalEntity?;
    # The retention period is configured by the customer for the transactional data of the given application
    int retentionPeriod?;
    # Possible values are Day, Month and Year
    "DAY"|"MON"|"ANN" retentionUnit?;
    ConditionSet[] conditionSet?;
};

# Represents the Queries record for the operation: postDatasubjectinformation
public type PostDatasubjectinformationQueries record {
    # When the data subject id, name or email can be passed here The information corressponding to that data subject will be returned in the response.
    # When a value is passed for this query do not include the 'dataSubjectIds' field in the payload
    # **Note**-
    # This option is applicable only for those applications that have set the value of "dataSubjectInformationFilterEnabled" property as true in the service instance configuration.
    string search?;
};

public type ResidenceSet record {
    # The residence date is calculated based on the residence rules configured by the customer for the transactional data associated with a given data subject role and legal entity of the application group
    string residenceDate?;
    ConditionSet[] conditionSet?;
};

public type DataSubjectEndofResidenceConfirmation record {
    # Name of the transactional data with respect to which end of purpose of the data subject has to be checked
    string legalGround?;
    # End of purpose check should be done for the given transactional data instances associated with this data subject role of the application group.
    record {} dataSubjectRole?;
    # This is the date which is used as a base or reference to calculate the residence and retention dates based on the rules configured for the transasctional data.
    string startTime?;
    LegalEntitiesResidenceRules[] legalEntitiesResidenceRules?;
    DataSubjectEndofResidenceConfirmation_dataSubjects[] dataSubjects?;
};

public type DataSubjectsLegalGroundDestroying record {
    # The transactional data whose records have to be destroyed
    string legalGround?;
    # The transactional data instances of the application associated with this data subject role have to be destroyed
    string dataSubjectRole?;
};

public type DataSubjectLegalGround record {
    # Name of the transactional data associated with the data subject
    string legalGround?;
    # The transactional data of the data subject is associated with this data subject role of the application group.
    string dataSubjectRole?;
    # unique id used to identify the data subject
    string dataSubjectID?;
};

public type DataSubjectLegalGroundDeletion record {
    # Name of the transactional data for which the deletion (blocking) has been triggered
    string legalGround?;
    # The transactional data whose deletion (blocking) has been triggered is associated with this data subject role of the application
    string dataSubjectRole?;
    # unique id to indentify the data subject to which the transactional data is associated
    string dataSubjectID?;
    # This is the date which is used as a base or reference to calculate the residence and retention dates based on the rules configured for the transasctional data.
    string startTime?;
    # Date on or after which the transactional data instances can be destructed
    string maxDeletionDate?;
    DataSubjectLegalGroundDeletion_retentionRules[] retentionRules?;
};

public type ConditionalFieldValueHelpResponse_inner record {
    # Value of the conditional field associated with the transactional data of the application
    string value?;
    # description of the conditional field
    string valueDesc?;
};

public type DataSubjectRetentionStartDate record {
    # Name of the transactional data for which the maximum end of business date has to be computed
    string legalGround?;
    # The data subject role of the application that the given data subject is associated with
    string dataSubjectRole?;
    # The id used to uniquely identify the data subject whose deletion has been triggered
    string dataSubjectID?;
    # A corporation, an association, or any other organization of a legal capacity that has statutory rights and responsibilities.
    # The transactional data of an application group is associated with a given data subject role and legal entity.
    string legalEntity?;
    # This is the date which is used as a base or reference to calculate the residence and retention dates based on the rules configured for the transasctional data.
    string startTime?;
    RuleCondition[] rulesConditionSet?;
};

# Represents the Headers record for the operation: getConditionfieldvalues
public type GetConditionfieldvaluesHeaders record {
    string? Accept\-Language?;
};

public type DataSubjectEndofResidence record {
    # Name of the transactional data with respect to which end of purpose of the data subject has to be checked
    string legalGround?;
    # End of purpose check should be done for the given transactional data instances associated with this data subject role of the application group.
    string dataSubjectRole?;
    # This is the date which is used as a base or reference to calculate the residence and retention dates based on the rules configured for the transasctional data.
    string startTime?;
    LegalEntitiesResidenceRules[] legalEntitiesResidenceRules?;
};

# Provides a set of configurations for controlling the behaviours when communicating with a remote HTTP endpoint.
@display {label: "Connection Config"}
public type ConnectionConfig record {|
    # Configurations related to client authentication
    OAuth2ClientCredentialsGrantConfig auth;
    # The HTTP version understood by the client
    http:HttpVersion httpVersion = http:HTTP_2_0;
    # Configurations related to HTTP/1.x protocol
    ClientHttp1Settings http1Settings?;
    # Configurations related to HTTP/2 protocol
    http:ClientHttp2Settings http2Settings?;
    # The maximum time to wait (in seconds) for a response before closing the connection
    decimal timeout = 60;
    # The choice of setting `forwarded`/`x-forwarded` header
    string forwarded = "disable";
    # Configurations associated with request pooling
    http:PoolConfiguration poolConfig?;
    # HTTP caching related configurations
    http:CacheConfig cache?;
    # Specifies the way of handling compression (`accept-encoding`) header
    http:Compression compression = http:COMPRESSION_AUTO;
    # Configurations associated with the behaviour of the Circuit Breaker
    http:CircuitBreakerConfig circuitBreaker?;
    # Configurations associated with retrying
    http:RetryConfig retryConfig?;
    # Configurations associated with inbound response size limits
    http:ResponseLimitConfigs responseLimits?;
    # SSL/TLS-related options
    http:ClientSecureSocket secureSocket?;
    # Proxy server related options
    http:ProxyConfig proxy?;
    # Enables the inbound payload validation functionality which provided by the constraint package. Enabled by default
    boolean validation = true;
|};

public type ConditionalFieldValueHelpResponse ConditionalFieldValueHelpResponse_inner[];

public type MasterDataSubjectIOT_inner record {
    # Source application group
    string applicationGroup?;
    # BusinessPartner is the only role currently allowed
    string dataSubjectRole?;
    string dataSubjectId?;
    # Date time in UTC with ISO_LOCAL_DATE_TIME format. Date when the data subject deletion request is triggered.
    string deletionDate?;
    # Date time in UTC with ISO_LOCAL_DATE_TIME format. This is the end of business date.
    string retentionStartDate?;
    # Indicates whether purpose for this data subject and data subject role is over in all other application groups using the same master data service.
    #
    # * 0 - purpose over in all applications, 
    #
    # * 1-  purpose not over in all applications
    int purposeStatus?;
};

public type DataSubjectInformation record {
    # uniques id used to identify the data subject
    string dataSubjectId?;
    # full name of the data subject that wouold be displayed in DDS UI
    string name?;
    # email id of the data subject that would be displayed in the DDS UI
    string emailId?;
};

public type RuleCondition record {
    # Unique id to identify the business rules for the transactional data of a given application.
    string retentionID?;
    ConditionSet[] conditionSet?;
};

public type DataSubjectEndofResidenceResponse record {
    # List of data subjects that can be deleted
    DataSubjectEndofResidenceResponse_success[] success?;
    # List of data subjects that are not eligible for deletion
    DataSubjectEndofResidenceResponse_success[] nonConfirmCondition?;
};

public type DataSubjectDeletion record {
    # The application group to which the data subject whose deletion has been requested belongs to
    string applicationGroupName?;
    # the data subject role of the application to which the data subject whose deletion has been requested is associated with
    string dataSubjectRole?;
    # data subject id whose deletion has been request
    string dataSubjectID?;
    # Date on or after which the data subject can be destroyed
    string maxDeletionDate?;
};

# Represents the Headers record for the operation: postAsynccallback
public type PostAsynccallbackHeaders record {
    # The id of the data subject deletion request whose status has to be updated, same as the request id sent in the payload.
    string? Request\-Id?;
};

public type DataSubjectLegalEntitiesResponse_inner record {
    # A corporation, an association, or any other organization of a legal capacity that has statutory rights and responsibilities.
    # The transactional data of an application group is associated with a given data subject role and legal entity.
    string legalEntity?;
};

public type LegalEntityValueHelpResponse_inner record {
    # Value of the legal entity associated with the data subject role of the application
    string value?;
    # description of the legal entity
    string valueDesc?;
};

# Proxy server configurations to be used with the HTTP client endpoint.
public type ProxyConfig record {|
    # Host name of the proxy server
    string host = "";
    # Proxy server port
    int port = 0;
    # Proxy server username
    string userName = "";
    # Proxy server password
    @display {label: "", kind: "password"}
    string password = "";
|};

public type DataSubjectInformationRequest record {
    # application Group to which the data subject is associated
    string applicationGroupName?;
    # data subject role of the application group to which the data subject is associated
    string dataSubjectRole?;
    # ids of the data subjects whose information has to be fetched
    string[] dataSubjectIds?;
};

public type LegalEntitiesResidenceRules record {
    # A corporation, an association, or any other organization of a legal capacity that has statutory rights and responsibilities.
    # The transactional data of an application group is associated with a given data subject role and legal entity.
    string legalEntity?;
    ResidenceSet[] residenceRules?;
};

public type DataSubjectEndofResidenceResponse_success record {
    # Id used to uniquely identify a data subject
    string dataSubjectID?;
};

public type DataSubjectEndofResidenceConfirmationResponse_inner record {
    # is of the data subject that has reached the end of residence with respect to the transactional data passed in the payload
    string dataSubjectID?;
};

# Represents the Headers record for the operation: postAsyncdeletelegalgroundinstances
public type PostAsyncdeletelegalgroundinstancesHeaders record {
    # This id is sent to the application when the deletion of transactional data instances is triggered. The value of the requestCallId will be different for each of the transactional data of the application group.
    string requestCallId;
    # This id is sent to the application when the deletion of transactional data instances is triggered,
    # for a particular deletion request this id remains the same for all the transactional data of the application group.
    string requestCall;
    # The id of the transactional data deletion request whose status has to be updated.
    string Request\-Id;
};

public type AsyncDataSubjectLegalGroundDeletion record {
    # Name of the transactional data for which the deletion (blocking) has been triggered
    string legalGround?;
    # The transactional data whose deletion (blocking) has been triggered is associated with this data subject role of the application
    string dataSubjectRole?;
    # unique id to indentify the data subject to which the transactional data is associated
    string dataSubjectID?;
    # This is the date which is used as a base or reference to calculate the residence and retention dates based on the rules configured for the transasctional data.
    string startTime?;
    # Date on or after which the transactional data instances can be destructed
    string maxDeletionDate?;
    DataSubjectLegalGroundDeletion_retentionRules[] retentionRules?;
};

# Provides settings related to HTTP/1.x protocol.
public type ClientHttp1Settings record {|
    # Specifies whether to reuse a connection for multiple requests
    http:KeepAlive keepAlive = http:KEEPALIVE_AUTO;
    # The chunking behaviour of the request
    http:Chunking chunking = http:CHUNKING_AUTO;
    # Proxy server related options
    ProxyConfig proxy?;
|};

public type DataSubjectEndofResidenceConfirmationResponse DataSubjectEndofResidenceConfirmationResponse_inner[];

public type LegalEntityValueHelpResponse LegalEntityValueHelpResponse_inner[];

public type DataSubjectRetentionStartDateResponse record {
    # ID provided in request payload by retention manager
    string retentionID?;
    # This is the end of business date for the transactional data
    string retentionStartDate?;
};

public type DataSubjectAsyncCallBack record {
    # This is the request id that was used to trigger the deletion of the data subject.
    # The call back endpoint has to update the status of this request.
    string requestId?;
    # The possible values of status are
    # -1 => wrong status id 0 => new request 1 => request in progress 2 => completed request 3 => error in request
    int status?;
    # message containing details about the request status
    string message?;
    # possible values for request type are
    # APPLICATION_DATA_SUBJECT_DELETION => application data subject deletion PDM_DATA_SUBJECT_DELETION => personal data manager (pdm) data subject deletion RM_DATA_SUBJECT_DELETION => retention manager (rm) data subject deletion MDS_DATA_SUBJECT_DELETION => master data subject (mds) deletion RM_END_OF_PURPOSE => rm end of purpose check PDM_END_OF_PURPOSE => pdm end of purpose check MDS_END_OF_PURPOSE => mds end of purpose check
    string requestType?;
};

public type ConditionSet record {
    # Conditional field name for the transactional data, if any.
    # The details of the conditional field associated with the transactional data will have to be provided in the service instance configuration under:
    # retention-configs => legalGrounds => conditions
    string conditionFieldName?;
    # value of the conditional field for the transactional data
    string conditionFieldValue?;
};

public type MasterDataSubjectIOT MasterDataSubjectIOT_inner[];

public type DataSubjectEndofResidenceConfirmation_dataSubjects record {
    # id of the data subject which is eligible for deletion
    string dataSubjectID?;
};
